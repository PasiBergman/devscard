name: Main Branch

on:
  push:
    branches: [main]

jobs:
  checks:
    name: Run checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: npm
      - name: Install dependencies
        run: npm ci
      - name: Run Prettier
        run: npm run prettier:check
      - name: Run TypeScript types check
        run: npm run ts:check
      - name: Run Astro check
        run: npm run astro:check

  deploy:
    name: Deploy to server
    needs: [checks]
    if: github.repository == 'PasiBergman/devscard'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: npm
      - name: Install dependencies
        run: npm ci
      - name: Generate CV PDF
        run: npm run generate-pdf
      - name: Run Astro build command
        run: npm run build
      - name: Create SSH key
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ../private.key
          sudo chmod 600 ../private.key
          echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
        shell: bash
        env:
          SSH_PRIVATE_KEY: ${{secrets.SSH_PRIVATE_KEY}}
          SSH_KNOWN_HOSTS: ${{secrets.SSH_KNOWN_HOSTS}}
      - name: Deploy with SCP
        run: scp -i "${SSH_KEY_PATH}" -r ./dist/* "${REMOTE_USER}@${REMOTE_HOST}:${REMOTE_PATH}"
        shell: bash
        env:
          SSH_KEY_PATH: ${{ github.workspace }}/../private.key
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_PATH: ${{ secrets.REMOTE_PATH }}
